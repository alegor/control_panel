# Create your views here.

from django.template import Context, loader
from django.http import Http404
from django.template import RequestContext
from django.shortcuts import get_object_or_404, render_to_response
from django.http import HttpResponseRedirect, HttpResponse
from django.core.urlresolvers import reverse
from polls.models import Choice, Poll
from django.utils import simplejson
from django.shortcuts import render


def index(request):
    latest_poll_list = Poll.objects.all().order_by('-pub_date')[:5]
    return render_to_response('polls/index.html', {'latest_poll_list': latest_poll_list})


def detail(request, poll_id):
    p = get_object_or_404(Poll, pk=poll_id)
    return render_to_response('polls/detail.html', {'poll': p},
                               context_instance=RequestContext(request))
def results(request, poll_id):
    p = get_object_or_404(Poll, pk=poll_id)
    votingRes = Choice.objects.all()
    totalVoteCount = 0
    vrLabels = []
    vrData = []
    for vr in votingRes:
        vrLabels.append(vr.choice)
        vrData.append(vr.votes)
        totalVoteCount = totalVoteCount + vr.vote_count
    js_data = simplejson.dumps(vrLabels)        
    context = {'vr_labels' : js_data,
        'vr_data' : vrData,
        'vr_total_vote_count' : totalVoteCount}
    return render(request, 'polls/results.html', context)
   

def vote(request, poll_id):
    p = get_object_or_404(Poll, pk=poll_id)
    try:
        selected_choice = p.choice_set.get(pk=request.POST['choice'])
    except (KeyError, Choice.DoesNotExist):
        # Redisplay the poll voting form.
        return render_to_response('polls/detail.html', {
            'poll': p,
            'error_message': "You didn't select a choice.",
        }, context_instance=RequestContext(request))
    else:
        selected_choice.votes += 1
        selected_choice.save()
        # Always return an HttpResponseRedirect after successfully dealing
        # with POST data. This prevents data from being posted twice if a
        # user hits the Back button.
        return HttpResponseRedirect(reverse('polls.views.results', args=(p.id,)))
